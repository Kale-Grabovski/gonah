apiVersion: apps/v1
#kind: StatefulSet
kind: Deployment
metadata:
  name: gonah
  labels:
    app: gonah
spec:
  #serviceName: gonah-svc
  replicas: 3
  selector:
    matchLabels:  #Deploy in a POD that has labels app
      app: gonah
  template: #For the creation of the pod
    metadata:
      labels:
        app: gonah
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: gonah
          image: pzdc/gonah:v1.1.16
          env:
            - name: GONAH_DB_DSN
              value: postgres://pguser:pgpwd@postgres-service-np.default.svc:5435/pgdb?sslmode=disable&pool_max_conns=10
            - name: GONAH_APIPORT
              value: "8877"
            - name: GONAH_KAFKA_HOST
              value: kafka-svc.default.svc:9092
          ports:
            - containerPort: 8877
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /up
              port: 8877
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /up
              port: 8877
---

apiVersion: v1
kind: Service
metadata:
  name: gonah-svc
spec:
  type: NodePort
  selector:
    app: gonah
  ports:
    - port: 8877

#---
#
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: gonah-ingress
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /$1
#spec:
#  rules:
#    - host: gonah.app
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: gonah-service
#                port:
#                  number: 8878
