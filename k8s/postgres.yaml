apiVersion: v1
kind: ConfigMap
metadata:
  name: psql-itwl-cm
data:
  POSTGRES_DB: "pgdb"
  POSTGRES_USER: "pguser"
  POSTGRES_PASSWORD: "pgpwd"

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: psql-pv
  labels:
    app: psql
    ver: itwl-pv
spec:
  capacity:
    storage: 400Mi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: 192.168.50.1
    path: "/mnt/vagrant-kubernetes/data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: psql-itwl-pvc
spec:
  selector:
    matchLabels:  #Select a volume with this labels
      app: psql
      ver: itwl-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 400Mi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: psql
    ver: itwl
spec:
  replicas: 1
  selector:
    matchLabels:  #Deploy in a POD that has labels app
      app: psql
      ver: itwl
  template: #For the creation of the pod
    metadata:
      labels:
        app: psql
        ver: itwl
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: postgres
          image: postgres:15.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: psql-itwl-cm
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdatavol
      volumes:
        - name: pgdatavol
          persistentVolumeClaim:
            claimName: psql-itwl-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service-np
spec:
  type: NodePort
  selector:
    app: psql
  ports:
    - port: 5435
      targetPort: 5432
