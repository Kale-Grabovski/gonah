name: run-tests
on:
  push:
    branches: ["master"]
# on:
#  pull_request:
env:
  GO_VERSION: 1.21.0
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    #runs-on: self-hosted
    steps:
    - name: Set up go to test ${{env.GO_VERSION}}
      uses: actions/setup-go@v4
      with:
        go-version: ${{env.GO_VERSION}}
    - name: Check out code into the Go module directory
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Build
      run: go build -o gonah
    - name: Tests
      run: go test -count=1 -v ./...

  deploy:
    needs: test
    environment: prod
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Set up go to deploy ${{env.GO_VERSION}}
        uses: actions/setup-go@v4
        with:
          go-version: ${{env.GO_VERSION}}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Build
        run: CGO_ENABLED=0 go build -o gonah
      - name: Archive binary and migrations
        run: tar -cf deploy.tar gonah migrations
      - name: Copy archive to remote machine
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy.tar"
          target: "/tmp/"
      - name: Restart service
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          # semicolons are required
          command: |
            sudo supervisorctl stop piska;
            rm -rf ~/piska/migrations;
            tar -C ~/piska/ -xf /tmp/deploy.tar;
            rm /tmp/deploy.tar;
            sudo supervisorctl start piska;
