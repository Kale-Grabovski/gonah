.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  cache:
    paths:
      - .go/pkg/mod/

variables:
  OUTPUT_NAME: __bin__/$CI_PROJECT_NAME

stages:
  - lint
  - test
  - build
  - deploy-stage
  - deploy

lint:
  image: golangci/golangci-lint:latest
  stage: lint
  extends: .go-cache
  allow_failure: false
  script:
    - golangci-lint run -v

test:
  image: golang:latest
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

build:
  image: golang:latest
  stage: build
  script:
    - mkdir -p $OUTPUT_NAME
    - go build -o $CI_PROJECT_DIR/$OUTPUT_NAME
  artifacts:
    paths:
      - $OUTPUT_NAME

.deploy:
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod -R 700 ~/.ssh
    - ssh-keyscan gitlab.app >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp -P$SSH_PORT -r ./$OUTPUT_NAME $SSH_USER@$SSH_HOST:~/pisk/
    - ssh -p$SSH_PORT $SSH_USER@$SSH_HOST 'sudo supervisorctl restart pisk'

deploy-stage:
  image: kroniak/ssh-client
  stage: deploy-stage
  extends: .deploy
  environment:
    name: stage
    url: http://stage.project.com
  rules:
    - when: manual

deploy:
  image: kroniak/ssh-client
  stage: deploy
  extends: .deploy
  environment:
    name: prod
    url: https://prod.project.com
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - when: manual
